{"version":3,"sources":["main.cljs"],"mappings":";AASA,AAAA,AAAMA;AAAN,AACE,AAAA,AAAiBC;;AAEnB,AAAA,AAAMC,AAAWC;AAAjB,AACI,AAAA,AAAA,AAACC,AACAD,AAEC,AAACH;;AAQP,AAAA,AAAAK,AAAAC;AAAA;AAAA,AAAA,AACEC,AACA,AAAA,AAAA,AAACH,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAACC,AAEA,AAAA,AAAA,AAAA,AAACC,AACU,AAACV","names":["main/get-canvas","js/document","main/start-app","runnable","membrane.webgl/run","js/main","js/main.canvas-info","main/canvas-info","membrane.basic-components/textarea","membrane.component.make_app","cljs.core.atom"],"sourcesContent":["(ns main \n  (:require    \n   [cljs.core.async :refer [go go-loop chan <! >! timeout]]\n   [membrane.basic-components :as basic]\n   [membrane.component :as component\n    :refer [defui defeffect]]\n   [membrane.ui :as ui]\n   [membrane.webgl]))\n\n(defn get-canvas [] \n  (.getElementById js/document \"canvas\"))\n\n(defn start-app [runnable]\n    (membrane.webgl/run \n     runnable\n     {:container\n      (get-canvas)}))\n\n;; (start-app \n;;  #(ui/with-color [0 0 0] (ui/rounded-rectangle 500 500 50))\n;;  (membrane.component/make-app \n;;    #'membrane.basic-components/textarea \n;;   (atom {:text \"yo\"})))\n\n(defonce\n  canvas-info\n  (membrane.webgl/run\n;;  #(ui/with-color [0 0 0] (ui/rounded-rectangle 500 500 50))\n   (membrane.component/make-app \n    #'membrane.basic-components/textarea \n    (atom {:text \"yo\"}))\n   {:container (get-canvas)}))"]}